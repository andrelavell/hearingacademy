---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import topics from '../data/topics_index.json';

export interface Props {
  title: string;
  description: string;
  publishedTime: string;
  modifiedTime?: string;
  author: string;
  authorTitle?: string;
  category: string;
  tags: string[];
  image?: string;
  imageAlt?: string;
  imageCredit?: string;
  imageCreditUrl?: string;
  readingTime?: string;
}

const {
  title,
  description,
  publishedTime,
  modifiedTime,
  author,
  authorTitle,
  category,
  tags,
  image = '/images/articles/2025-08/ai-hearing-aids-noise-pexels-14682242.jpg',
  imageAlt,
  imageCredit,
  imageCreditUrl,
  readingTime = '5 min read'
} = Astro.props;

const FALLBACK_IMG = '/images/articles/2025-08/ai-hearing-aids-noise-pexels-14682242.jpg';
const safeImage = (image && image !== '/article-default.jpg') ? image : FALLBACK_IMG;

// Compute dynamic related articles
const currentSlug = Astro.url.pathname.replace(/\/+$/, '').split('/').pop();
const tagSet = new Set((tags || []).map(t => String(t).toLowerCase()));
const relatedRanked = (Array.isArray(topics) ? topics : [])
  .filter(it => it && it.slug && it.slug !== currentSlug)
  .map(it => {
    const itsTags = Array.isArray(it.tags) ? it.tags.map(t => String(t).toLowerCase()) : [];
    const overlap = itsTags.filter(t => tagSet.has(t)).length;
    const sameCategory = String(it.category || '').toLowerCase() === String(category || '').toLowerCase();
    const score = overlap * 2 + (sameCategory ? 1 : 0);
    return { it, score };
  })
  .filter(x => x.score > 0)
  .sort((a, b) => b.score - a.score);
const related = relatedRanked.slice(0, 3).map(x => x.it);

// Canonical URL and structured data for Article
const canonical = Astro.url.toString();
const breadcrumb = [
  { href: '/', label: 'Home' },
  { href: '/articles', label: 'Articles' },
  { href: Astro.url.pathname, label: title }
];

const articleLd = {
  '@context': 'https://schema.org',
  '@type': 'Article',
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': canonical
  },
  headline: title,
  image: [new URL(safeImage, Astro.url).toString()],
  datePublished: publishedTime,
  dateModified: modifiedTime || publishedTime,
  author: {
    '@type': 'Person',
    name: author
  },
  description
};

const breadcrumbLd = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: breadcrumb.map((b, i) => ({
    '@type': 'ListItem',
    position: i + 1,
    name: b.label,
    item: new URL(b.href, Astro.url).toString()
  }))
};
---

<BaseLayout 
  title={title}
  description={description}
  image={safeImage}
  article={true}
  publishedTime={publishedTime}
  modifiedTime={modifiedTime}
  author={author}
  tags={tags}
>
  <Header />
  
  <main>
    <article class="article">
      <div class="article-header">
        <div class="container">
          <div class="breadcrumb">
            <a href="/">Home</a>
            <span class="separator">/</span>
            <a href="/articles">Articles</a>
            <span class="separator">/</span>
            <span class="current">{title}</span>
          </div>
          
          <div class="article-meta">
            <span class="category">{category}</span>
            <time datetime={publishedTime}>{new Date(publishedTime).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</time>
            <span class="reading-time">{readingTime}</span>
          </div>
          
          <h1 class="article-title">{title}</h1>
          <p class="article-description">{description}</p>
          
          <div class="author-info">
            <div class="author-avatar" aria-hidden="true">
              <svg width="48" height="48" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg" role="img">
                <title>Author</title>
                <circle cx="24" cy="24" r="24" fill="#e5e7eb" />
                <circle cx="24" cy="18" r="8" fill="#9ca3af" />
                <path d="M8 40c3.5-7 11-10 16-10s12.5 3 16 10" fill="#9ca3af" />
              </svg>
            </div>
            <div class="author-details">
              <span class="author-name">By {author}</span>
              <span class="author-title">{authorTitle || 'Audiologist & Hearing Specialist'}</span>
            </div>
          </div>
        </div>
      </div>
      
      <div class="article-image">
        <div class="container">
          <img src={safeImage} alt={imageAlt || title} width="800" height="400" />
          {imageCredit && (
            <div class="image-credit">
              Photo: {imageCreditUrl ? (
                <a href={imageCreditUrl} target="_blank" rel="noopener nofollow">{imageCredit}</a>
              ) : (
                imageCredit
              )}
            </div>
          )}
        </div>
      </div>
      
      <div class="article-content">
        <div class="content-container content-grid">
          <aside class="toc" id="toc">
            <div class="toc-inner">
              <div class="toc-title">On this page</div>
              <nav class="toc-nav"><ul></ul></nav>
            </div>
          </aside>

          <div class="article-body">
            <slot />
          </div>
        </div>

        <div class="content-container">
          <div class="article-footer">
            <div class="tags">
              <h4>Tags:</h4>
              <div class="tag-list">
                {tags.map(tag => (
                  <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="tag">{tag}</a>
                ))}
              </div>
            </div>
            
            <div class="share-buttons">
              <h4>Share this article:</h4>
              <div class="social-share">
                <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.toString())}`} class="share-btn twitter" target="_blank" rel="noopener">
                  <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M23.4 4.8c-.8.4-1.6.6-2.5.8.9-.6 1.6-1.4 1.9-2.4-.8.5-1.8.9-2.8 1.1C19.3 3.4 18.1 3 16.8 3c-2.5 0-4.6 2.1-4.6 4.6 0 .4 0 .8.1 1.2-3.8-.2-7.1-2-9.3-4.8-.4.7-.6 1.4-.6 2.2 0 1.6.8 3 2 3.8-.7 0-1.4-.2-2-.6 0 2.3 1.7 4.2 3.9 4.7-.4.1-.8.2-1.3.2-.3 0-.6 0-.9-.1.6 1.9 2.4 3.3 4.6 3.4-1.7 1.3-3.8 2.1-6.1 2.1-.4 0-.8 0-1.2-.1 2.2 1.4 4.7 2.2 7.5 2.2 9 0 13.9-7.5 13.9-14 0-.2 0-.3 0-.5.9-.7 1.6-1.5 2.2-2.4z"/></svg>
                  Twitter
                </a>
                <a href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.toString())}`} class="share-btn facebook" target="_blank" rel="noopener">
                  <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M22 12a10 10 0 1 0-11.6 9.9v-7h-2v-3h2v-2.3c0-2 1.2-3.1 3-3.1.9 0 1.8.1 1.8.1v2h-1c-1 0-1.3.6-1.3 1.2V12h2.2l-.3 3h-1.9v7A10 10 0 0 0 22 12"/></svg>
                  Facebook
                </a>
                <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`} class="share-btn linkedin" target="_blank" rel="noopener">
                  <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M4.98 3.5C4.98 4.88 3.86 6 2.5 6S0 4.88 0 3.5 1.12 1 2.5 1 4.98 2.12 4.98 3.5zM.5 8.5h4V24h-4V8.5zm7.5 0h3.8v2.1h.1c.5-1 1.8-2.1 3.7-2.1 4 0 4.7 2.6 4.7 5.9V24h-4v-6.6c0-1.6 0-3.7-2.3-3.7s-2.7 1.8-2.7 3.6V24h-4V8.5z"/></svg>
                  LinkedIn
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </article>
    
    <!-- Related Articles -->
    {related.length > 0 && (
      <section class="related-articles">
        <div class="container">
          <h2>Related Articles</h2>
          <div class="related-grid">
            {related.map(r => (
              <article class="related-card">
                <div class="related-image">
                  <img src={(r.image && r.image !== '/article-default.jpg') ? r.image : FALLBACK_IMG} alt={r.title} width="300" height="200" />
                </div>
                <div class="related-content">
                  <span class="related-category">{r.category}</span>
                  <h3><a href={`/articles/${r.slug}`}>{r.title}</a></h3>
                  {r.publishedTime && (
                    <time datetime={r.publishedTime}>{new Date(r.publishedTime).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</time>
                  )}
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}
  </main>
  
  <Footer />
</BaseLayout>

<script is:inline>
  // Build ToC from h2 headings within the article body, similar to ReviewLayout
  (function initArticleToc(){
    const run = () => {
      const container = document.querySelector('.article-body');
      const list = document.querySelector('.toc-nav ul');
      const toc = document.querySelector('.toc');
      if (!container || !list) return;
      const headings = Array.from(container.querySelectorAll('h2'));
      if (!headings.length) {
        toc?.classList.add('hidden');
        return;
      }
      list.innerHTML = '';
      headings.forEach(h => {
        if (!h.id) {
          const slug = (h.textContent || '')
            .toLowerCase()
            .trim()
            .replace(/[^a-z0-9\s-]/g, '')
            .replace(/\s+/g, '-');
          if (slug) h.id = slug;
        }
        const li = document.createElement('li');
        li.className = 'h2';
        const a = document.createElement('a');
        a.href = `#${h.id}`;
        a.textContent = h.textContent || '';
        li.appendChild(a);
        list.appendChild(li);
      });
    };
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', run, { once: true });
    } else {
      run();
    }
  })();
</script>

<style>
  .article-header {
    background: var(--color-background-light);
    padding: var(--space-6) 0 var(--space-7);
  }

  .breadcrumb {
    font-size: var(--fs-200);
    margin-bottom: var(--space-5);
    color: var(--color-text-muted);
  }

  .breadcrumb a {
    color: var(--color-primary);
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .separator {
    margin: 0 var(--space-2);
  }

  .current {
    color: var(--color-text-muted);
  }

  .article-meta {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    margin-bottom: var(--space-5);
    font-size: var(--fs-200);
  }

  .category {
    background: var(--color-primary);
    color: white;
    padding: var(--space-1) var(--space-3);
    border-radius: 20px;
    font-weight: var(--fw-medium);
  }

  .reading-time {
    color: var(--color-text-muted);
  }

  .article-title {
    font-size: var(--fs-800);
    font-weight: var(--fw-bold);
    color: var(--color-text);
    margin-bottom: var(--space-4);
    line-height: var(--lh-tight);
  }

  .article-description {
    font-size: var(--fs-400);
    color: var(--color-text-muted);
    margin-bottom: var(--space-5);
    line-height: var(--lh-normal);
  }

  .author-info {
    display: flex;
    align-items: center;
    gap: var(--space-3);
  }

  .author-avatar img {
    border-radius: 50%;
    width: 48px;
    height: 48px;
    object-fit: cover;
  }

  .author-details {
    display: flex;
    flex-direction: column;
  }

  .author-name {
    font-weight: var(--fw-semibold);
    color: var(--color-text);
  }

  .author-title {
    font-size: var(--fs-100);
    color: var(--color-text-muted);
  }

  .article-image {
    margin-bottom: var(--space-7);
  }

  .article-image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
    border-radius: 12px;
  }

  .article-body {
    font-size: var(--fs-300);
    line-height: var(--lh-relaxed);
    color: var(--color-text);
    margin-bottom: var(--space-7);
  }

  .article-body h2 {
    font-size: var(--fs-700);
    margin: var(--space-6) 0 var(--space-3);
    color: var(--color-text);
  }

  .article-body h3 {
    font-size: var(--fs-600);
    margin: var(--space-5) 0 var(--space-3);
    color: var(--color-text);
  }

  .article-body p {
    margin-bottom: var(--space-4);
  }

  .article-body ul, .article-body ol {
    margin-bottom: var(--space-4);
    padding-left: 1.25rem;
  }

  .article-body li {
    margin-bottom: var(--space-3);
  }

  .article-body blockquote {
    border-left: 4px solid var(--color-primary);
    padding: var(--space-4) var(--space-6);
    margin: var(--space-6) 0;
    background: var(--color-background-light);
    font-style: italic;
    border-radius: 0 8px 8px 0;
  }

  .article-footer {
    border-top: 1px solid var(--color-border);
    padding-top: var(--space-6);
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-6);
  }

  .tags h4, .share-buttons h4 {
    font-size: var(--fs-400);
    margin-bottom: var(--space-3);
    color: var(--color-text);
  }

  .tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
  }

  .tag {
    background: var(--color-background-light);
    color: var(--color-text);
    padding: var(--space-2) var(--space-4);
    border-radius: 20px;
    text-decoration: none;
    font-size: var(--fs-200);
    transition: all 0.3s ease;
  }

  .tag:hover {
    background: var(--color-primary);
    color: white;
  }

  .social-share {
    display: flex;
    gap: var(--space-3);
  }

  .share-btn {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-3) var(--space-4);
    border-radius: 8px;
    text-decoration: none;
    font-weight: var(--fw-medium);
    transition: all 0.3s ease;
    font-size: var(--fs-200);
  }

  .share-btn.twitter {
    background: #1da1f2;
    color: white;
  }

  .share-btn.facebook {
    background: #1877f2;
    color: white;
  }

  .share-btn.linkedin {
    background: #0077b5;
    color: white;
  }

  .share-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  .related-articles {
    padding: var(--space-8) 0;
    background: var(--color-background-light);
  }

  .related-articles h2 {
    font-size: var(--fs-700);
    text-align: center;
    margin-bottom: var(--space-7);
    color: var(--color-text);
  }

  .related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6);
  }

  .related-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .related-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  }

  .related-image img {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .related-content {
    padding: var(--space-5);
  }

  .related-category {
    background: var(--color-secondary);
    color: white;
    padding: var(--space-1) var(--space-3);
    border-radius: 20px;
    font-size: var(--fs-100);
    font-weight: var(--fw-medium);
  }

  .related-content h3 {
    margin: var(--space-4) 0 var(--space-2);
    font-size: var(--fs-400);
  }

  .related-content h3 a {
    color: var(--color-text);
    text-decoration: none;
  }

  .related-content h3 a:hover {
    color: var(--color-primary);
  }

  .related-content time {
    font-size: var(--fs-100);
    color: var(--color-text-muted);
  }

  @media (max-width: 768px) {
    .article-title {
      font-size: var(--fs-700);
    }

    .article-description {
      font-size: var(--fs-300);
    }

    .article-meta {
      flex-wrap: wrap;
    }

    .article-footer {
      grid-template-columns: 1fr;
      gap: var(--space-6);
    }

    .social-share {
      flex-wrap: wrap;
    }

    .related-articles h2 {
      font-size: var(--fs-600);
    }
  }

  @media (max-width: 480px) {
    .article-header {
      padding: var(--space-5) 0 var(--space-6);
    }

    .article-title {
      font-size: var(--fs-600);
    }

    .article-body {
      font-size: var(--fs-300);
    }

    .share-btn {
      padding: var(--space-2) var(--space-3);
      font-size: var(--fs-100);
    }
  }
</style>
