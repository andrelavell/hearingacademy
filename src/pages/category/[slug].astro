---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import topics from '../../data/topics_index.json';
import categories from '../../data/categories.json';

export async function getStaticPaths() {
  const slugify = (s) => String(s || '').toLowerCase().replace(/[^a-z0-9\s-]/g, '').trim().replace(/\s+/g, '-');
  const cats = Array.isArray(categories) ? categories : [];
  return cats.map((c) => ({ params: { slug: slugify(c) } }));
}

const { slug } = Astro.params;
const slugify = (s) => String(s || '').toLowerCase().replace(/[^a-z0-9\s-]/g, '').trim().replace(/\s+/g, '-');
const parseDate = (d) => Date.parse(d || 0) || 0;
const category = (Array.isArray(categories) ? categories : []).find((c) => slugify(c) === slug);
const items = (Array.isArray(topics) ? topics : [])
  .filter((it) => category ? it.category === category : false)
  .slice()
  .sort((a,b) => (parseDate(b.publishedTime || b.modifiedTime) - parseDate(a.publishedTime || a.modifiedTime)));
const pageTitle = category ? `Category: ${category}` : 'Category';
---

<BaseLayout title={pageTitle} description={category ? `Articles in ${category}` : 'Category articles'}>
  <Header />
  <main>
    <section class="page-hero">
      <div class="container">
        <h1>{pageTitle}</h1>
        {!category && <p>Category not found.</p>}
      </div>
    </section>

    {category && (
      <section class="listing">
        <div class="container">
          {items.length === 0 ? (
            <p>No articles found in this category yet.</p>
          ) : (
            <div class="articles-grid">
              {items.map(item => (
                <article class="article-card">
                  <div class="article-image">
                    <img src={item.image || '/article-default.jpg'} alt={item.title} width="400" height="250" />
                  </div>
                  <div class="article-content">
                    <div class="article-meta">
                      <span class="category">{item.category}</span>
                      {item.publishedTime && (
                        <time datetime={item.publishedTime}>{new Date(item.publishedTime).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</time>
                      )}
                    </div>
                    <h3><a href={`/articles/${item.slug}`}>{item.title}</a></h3>
                    {item.description && <p>{item.description}</p>}
                    <a href={`/articles/${item.slug}`} class="read-more">Read More</a>
                  </div>
                </article>
              ))}
            </div>
          )}
        </div>
      </section>
    )}
  </main>
  <Footer />
</BaseLayout>

<style>
  .page-hero { padding: var(--space-8) 0 var(--space-6); background: var(--color-background-light); }
  .listing { padding: var(--space-6) 0 var(--space-8); }
  .articles-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: var(--space-6); }
  .article-card { background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1); }
  .article-image img { width: 100%; height: 200px; object-fit: cover; }
  .article-content { padding: var(--space-4); }
  .article-meta { display: flex; justify-content: space-between; align-items: center; margin-bottom: var(--space-3); font-size: var(--fs-200); }
  .category { background: var(--color-primary); color: white; padding: var(--space-1) var(--space-3); border-radius: 20px; font-weight: var(--fw-medium); }
  .read-more { color: var(--color-primary); font-weight: var(--fw-semibold); text-decoration: none; font-size: var(--fs-200); }
</style>
