---
const currentPath = Astro.url.pathname;
import topics from '../data/topics_index.json';
import navConf from '../data/navigation.json';

const slugify = (s) => String(s || '').toLowerCase().replace(/[^a-z0-9\s-]/g, '').trim().replace(/\s+/g, '-');

const pinned = Array.isArray(navConf?.pinnedCategories) ? navConf.pinnedCategories : ['Hearing Aids', 'Technology'];
const maxDynamic = Number(navConf?.maxDynamicCategories ?? 2);

// Count articles per category
const countByCat = {};
for (const it of (Array.isArray(topics) ? topics : [])) {
  if (it?.category) countByCat[it.category] = (countByCat[it.category] || 0) + 1;
}

// Choose dynamic categories by article count, excluding pinned
const dynamicCats = Object.keys(countByCat)
  .filter((c) => !pinned.includes(c))
  .sort((a, b) => (countByCat[b] - countByCat[a]))
  .slice(0, Math.max(0, maxDynamic));

const categoryMenu = [...pinned, ...dynamicCats].map((label) => ({
  label,
  href: `/category/${slugify(label)}`,
  active: currentPath.startsWith(`/category/${slugify(label)}`),
}));
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <div class="nav-brand">
        <a href="/" class="logo">
          <span class="logo-text">HearingAcademy</span>
        </a>
      </div>
      
      <div class="nav-menu" id="nav-menu">
        <ul class="nav-list">
          <li class="nav-item">
            <a href="/" class={`nav-link ${currentPath === '/' ? 'active' : ''}`}>Home</a>
          </li>
          <li class="nav-item">
            <a href="/articles" class={`nav-link ${currentPath.startsWith('/articles') ? 'active' : ''}`}>Articles</a>
          </li>
          {categoryMenu.map((c) => (
            <li class="nav-item">
              <a href={c.href} class={`nav-link ${c.active ? 'active' : ''}`}>{c.label}</a>
            </li>
          ))}
          <li class="nav-item">
            <a href="/about" class={`nav-link ${currentPath === '/about' ? 'active' : ''}`}>About</a>
          </li>
          <li class="nav-item">
            <a href="/contact" class={`nav-link ${currentPath === '/contact' ? 'active' : ''}`}>Contact</a>
          </li>
        </ul>
      </div>
      
      <div class="nav-actions">
        <button class="search-btn" aria-label="Search">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
        </button>
        <button class="menu-toggle" id="menu-toggle" aria-label="Toggle menu">
          <span></span>
          <span></span>
          <span></span>
        </button>
      </div>
    </nav>
  </div>
</header>

<style>
  .header {
    background: var(--color-background);
    border-bottom: 1px solid var(--color-border);
    position: sticky;
    top: 0;
    z-index: 100;
    backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.95);
  }

  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-4) 0;
    min-height: 70px;
  }

  .nav-brand {
    flex-shrink: 0;
  }

  .logo {
    font-family: var(--font-family-serif);
    font-size: var(--fs-700);
    font-weight: var(--fw-bold);
    color: var(--color-primary);
    text-decoration: none;
    display: flex;
    align-items: center;
  }

  .logo:hover {
    color: var(--color-primary-light);
  }

  .nav-menu {
    display: flex;
    align-items: center;
  }

  .nav-list {
    display: flex;
    list-style: none;
    gap: var(--space-6);
    margin: 0;
    padding: 0;
  }

  .nav-link {
    color: var(--color-text);
    text-decoration: none;
    font-weight: var(--fw-medium);
    font-size: var(--fs-300);
    padding: var(--space-2) 0;
    position: relative;
    transition: color 0.3s ease;
  }

  .nav-link:hover,
  .nav-link.active {
    color: var(--color-primary);
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--color-primary);
    border-radius: 1px;
  }

  .nav-actions {
    display: flex;
    align-items: center;
    gap: var(--space-3);
  }

  .search-btn {
    background: none;
    border: none;
    color: var(--color-text-muted);
    cursor: pointer;
    padding: var(--space-2);
    border-radius: 50%;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .search-btn:hover {
    color: var(--color-primary);
    background: var(--color-background-light);
  }

  .menu-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--space-2);
    gap: 3px;
  }

  .menu-toggle span {
    width: 20px;
    height: 2px;
    background: var(--color-text);
    transition: all 0.3s ease;
  }

  @media (max-width: 768px) {
    .nav-menu {
      position: fixed;
      top: 70px;
      left: 0;
      right: 0;
      background: var(--color-background);
      border-bottom: 1px solid var(--color-border);
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .nav-menu.active {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    .nav-list {
      flex-direction: column;
      gap: 0;
      padding: var(--space-4) 0;
    }

    .nav-item {
      width: 100%;
    }

    .nav-link {
      display: block;
      padding: var(--space-4);
      border-bottom: 1px solid var(--color-border);
    }

    .nav-link.active::after {
      display: none;
    }

    .menu-toggle {
      display: flex;
    }

    .logo {
      font-size: var(--fs-600);
    }
  }

  @media (max-width: 480px) {
    .nav {
      padding: var(--space-3) 0;
    }
    
    .logo {
      font-size: var(--fs-500);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const menuToggle = document.getElementById('menu-toggle');
    const navMenu = document.getElementById('nav-menu');
    
    if (menuToggle && navMenu) {
      menuToggle.addEventListener('click', function() {
        navMenu.classList.toggle('active');
      });
      
      // Close menu when clicking on a link
      const navLinks = navMenu.querySelectorAll('.nav-link');
      navLinks.forEach(link => {
        link.addEventListener('click', () => {
          navMenu.classList.remove('active');
        });
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        if (!navMenu.contains(event.target) && !menuToggle.contains(event.target)) {
          navMenu.classList.remove('active');
        }
      });
    }
  });
</script>
